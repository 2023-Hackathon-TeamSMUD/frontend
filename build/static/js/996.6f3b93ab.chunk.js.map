{"version":3,"file":"static/js/996.6f3b93ab.chunk.js","mappings":"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","sources":["../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js","component/presentation/MainPage/Cody.jsx","hooks/useTextToSpeech.jsx"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import React, {useState} from 'react';\nimport '../../../styles/components/MainPage/Cody.scss'\nimport Progress3 from '../../../assets/MainPage/Progress3.png'\nimport Top from '../../../assets/MainPage/Top.png'\nimport Pant from '../../../assets/MainPage/Pants.png'\nimport Shoe from '../../../assets/MainPage/Shoe.png'\nimport { useNavigate } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useTextToSpeech } from '../../../hooks/useTextToSpeech';\n\nconst Cody = ({result}) => {\n\n    const navigate = useNavigate();\n    const [isSaved, setIsSaved] = useState(false);\n    const [showAlert, setShowAlert] = useState(false); // 새로운 상태 변수 추가\n    const handleSaveResult = () => {\n        if (isSaved === false) {\n          const key = uuidv4();\n          // Check if the key is not one of the unwanted ones\n          if (!['iconify-count', 'iconify0', 'iconify-version'].includes(key) && !localStorage.getItem(`${key}`)) {\n            localStorage.setItem(`${key}`, JSON.stringify(result));\n            setIsSaved(true);\n            setShowAlert(true);\n            setTimeout(() => {\n              setShowAlert(false);\n            }, 3000);\n          }\n        }\n    };\n    localStorage.removeItem('iconify-count');\n    localStorage.removeItem('iconify0');\n    localStorage.removeItem('iconify-version');\n    \n    console.log(localStorage.length)\n\n    const speak = useTextToSpeech();\n\n    return (\n        <div className='Cody_Container'>\n            <div className='Cody_Wrapper'>\n                <img src={Progress3} alt='Progress' className='SelectGender_Progress'/>\n                <div className='Cody_TextBox_LayOut'>\n                    <div className='Cody_TextBox1'>코디를 추천해드릴게요!</div>\n                    <div className='Cody_TextBox2'>{result.sockColor}양말에 어울리는 상의, 하의, 신발입니다.</div>\n                    {speak(`코디를 추천해드릴게요! ${result.sockColor}양말에 어울리는 상의, 하의, 신발입니다.`)}\n                </div>\n                <div className='Cody_Recommend_LayOut'>\n                    <div className='Cody_Recommend_Box'>\n                        <img src={Top} alt='' />\n                        {result.stylings[0].top}\n                    </div>\n                    <div className='Cody_Recommend_Box'>\n                        <img src={Pant} alt='' />\n                        {result.stylings[0].pants}\n                    </div>\n                    <div className='Cody_Recommend_Box'>\n                        <img src={Shoe} alt='' />\n                        {result.stylings[0].shoes}\n                    </div>\n                    {speak(`상의는 ${result.stylings[0].top}, 하의는 ${result.stylings[0].pants}, 신발은 ${result.stylings[0].shoes}`)}\n                </div>\n                <div className='Cody_Recommend_Btn_Layout'>\n                    <button className='Cody_Recommend_Btn1' onClick = {()=>navigate('/storage')}>종료하기</button>\n                    <button className='Cody_Recommend_Btn2'  disabled={isSaved} onClick = {handleSaveResult}>저장하기</button>\n                </div>\n\n                {showAlert && \n                 ((localStorage.length < 6) ? \n                    <div className='Cody_Alert'>양말 코디를 저장했어요!</div> \n                    : \n                    <div className='Cody_Alert'>최대 5개의 코디까지 저장할 수 있습니다.</div>)\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default Cody;","export const useTextToSpeech = () => {\n    return (text) => {\n        var msg = new SpeechSynthesisUtterance();\n        msg.text = text;\n        msg.repeat = 0; // Repeat twice\n        window.speechSynthesis.speak(msg);\n    };\n};\n"],"names":["getRandomValues","randomUUID","crypto","bind","rnds8","Uint8Array","rng","Error","byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","arguments","length","undefined","options","buf","native","rnds","random","_ref","result","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","isSaved","setIsSaved","_useState3","_useState4","showAlert","setShowAlert","localStorage","removeItem","console","log","speak","useTextToSpeech","_jsx","className","children","_jsxs","src","alt","sockColor","concat","stylings","top","pants","shoes","onClick","disabled","key","uuidv4","includes","getItem","setItem","JSON","stringify","setTimeout","text","msg","SpeechSynthesisUtterance","repeat","window","speechSynthesis"],"sourceRoot":""}